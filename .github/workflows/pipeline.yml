name: test

on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PYTHON_VERSION: "3.10"

jobs:
  flake8:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: checkout-repo
      uses: actions/checkout@v3
    - name: setup-python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: install-poetry
      run: python -m pip install poetry
    - name: install-deps
      run: poetry install
    - name: test
      run: poetry run flake8
  mypy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: checkout-repo
      uses: actions/checkout@v3
    - name: setup-python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: install-poetry
      run: python -m pip install poetry
    - name: install-deps
      run: poetry install
    - name: test
      run: poetry run mypy run.py
  pytest:
    needs: [flake8, mypy]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: checkout-repo
      uses: actions/checkout@v3
    - name: setup-python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: install-poetry
      run: python -m pip install poetry
    - name: install-deps
      run: poetry install
    - name: test
      run: poetry run pytest
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: pytest
    steps:
      - name: checkout-repo
        uses: actions/checkout@v3
      - name: container-registry-login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: extract-metadata
        id: meta
        uses: docker/metadata-action@v1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: build-push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
